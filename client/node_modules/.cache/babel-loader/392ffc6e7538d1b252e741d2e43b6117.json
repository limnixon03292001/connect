{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/Lim/Desktop/Clone/login-mern/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/Lim/Desktop/Clone/login-mern/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import*as api from'../../api/post';//I'll just leave these actions here since we are not using it and we are handling the api request inside the components\n// export const fetchPostsLimit = (history, pageNumber, setHasMore) => async (dispatch) => {\n//     try {\n//         dispatch({type: 'POSTS_LOADING'});\n//         const {data} = await api.fetchPostsLimit(pageNumber);\n//         console.log('post data: ', data);\n//         setHasMore(data.result.length > 0);\n//         dispatch({type: 'POSTS', payload: data});\n//     } catch (err) {\n//         dispatch({type:'ERRORS', payload: err});\n//         if(err.response?.status === 401){\n//             dispatch({type:'LOGOUT'});\n//             history.push('/login');\n//         }\n//     }\n// }\n// export const fetchUserPostsLimit = (history, id, pageNumber,setHasMore) => async (dispatch) => {\n//     try {\n//         dispatch({type:'POSTS_LOADING'});\n//         const {data} = await api.fetchUserPostsLimit(pageNumber, id);\n//         setHasMore(data.result.length > 0);\n//         console.log(data);\n//         dispatch({type: 'POSTS', payload: data});\n//     } catch (err) {\n//         dispatch({type:'ERRORS', payload: err});\n//         if(err.response?.status === 401){\n//             dispatch({type: 'LOGOUT'});\n//             history.push('/login');\n//         }\n//     }\n// }\nexport var createPost=function createPost(postData,setModalOpen){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var _yield$api$createPost,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;dispatch({type:'NEWPOST_LOADING'});_context.next=4;return api.createPost(postData);case 4:_yield$api$createPost=_context.sent;data=_yield$api$createPost.data;dispatch({type:'NEW_POST',payload:data});setModalOpen(false);_context.next=14;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](0);console.log('error sa created post',_context.t0);dispatch({type:'ERRORS',payload:_context.t0});case 14:case\"end\":return _context.stop();}}},_callee,null,[[0,10]]);}));return function(_x){return _ref.apply(this,arguments);};}();};export var deletePost=function deletePost(id){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;dispatch({type:'DELETE_LOADING'});_context2.next=4;return api.deletePost(id);case 4:dispatch({type:'DELETE_POST',payload:id});_context2.next=11;break;case 7:_context2.prev=7;_context2.t0=_context2[\"catch\"](0);console.log(_context2.t0);dispatch({type:'ERRORS',payload:_context2.t0});case 11:case\"end\":return _context2.stop();}}},_callee2,null,[[0,7]]);}));return function(_x2){return _ref2.apply(this,arguments);};}();};export var updatePost=function updatePost(id,updateData,modalHandler){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var _yield$api$updatePost,data;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;dispatch({type:'UPDATEPOST_LOADING'});_context3.next=4;return api.updatePost(id,updateData);case 4:_yield$api$updatePost=_context3.sent;data=_yield$api$updatePost.data;dispatch({type:'UPDATED_POST',payload:data});modalHandler();_context3.next=13;break;case 10:_context3.prev=10;_context3.t0=_context3[\"catch\"](0);dispatch({type:'ERRORS',payload:_context3.t0});case 13:case\"end\":return _context3.stop();}}},_callee3,null,[[0,10]]);}));return function(_x3){return _ref3.apply(this,arguments);};}();};export var likePost=function likePost(id){return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch){var _yield$api$likePost,data;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;_context4.next=3;return api.likePost(id);case 3:_yield$api$likePost=_context4.sent;data=_yield$api$likePost.data;dispatch({type:'LIKE_POST',payload:data});_context4.next=11;break;case 8:_context4.prev=8;_context4.t0=_context4[\"catch\"](0);dispatch({type:'ERRORS',payload:_context4.t0});case 11:case\"end\":return _context4.stop();}}},_callee4,null,[[0,8]]);}));return function(_x4){return _ref4.apply(this,arguments);};}();};// export const fetchCommentPost = (id) => async(dispatch) => {\n//     try{\n//         dispatch({type:'COMMENT_LOADING'});\n//         const {data} = await api.fetchCommentPost(id);\n//         dispatch({type: 'COMMENT', payload: data});\n//     } catch(err){\n//         dispatch({type: 'ERRORS', payload: err});\n//     }\n// }\nexport var createCommentPost=function createCommentPost(id,commentData){return/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch){var _yield$api$createComm,data;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.prev=0;dispatch({type:'CREATE_COMMENT_LOADING'});_context5.next=4;return api.createCommentPost(id,commentData);case 4:_yield$api$createComm=_context5.sent;data=_yield$api$createComm.data;dispatch({type:'NEW_COMMENT',payload:data});_context5.next=12;break;case 9:_context5.prev=9;_context5.t0=_context5[\"catch\"](0);dispatch({type:'ERRORS',payload:_context5.t0});case 12:case\"end\":return _context5.stop();}}},_callee5,null,[[0,9]]);}));return function(_x5){return _ref5.apply(this,arguments);};}();};export var updateCommentPost=function updateCommentPost(id,commentData,modalHandler){return/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(dispatch){var _yield$api$updateComm,data;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.prev=0;dispatch({type:'UPDATE_COMMENT_LOADING'});_context6.next=4;return api.updateCommentPost(id,commentData);case 4:_yield$api$updateComm=_context6.sent;data=_yield$api$updateComm.data;dispatch({type:'UPDATE_COMMENT',payload:data});modalHandler();_context6.next=13;break;case 10:_context6.prev=10;_context6.t0=_context6[\"catch\"](0);dispatch({type:'ERRORS',payload:_context6.t0});case 13:case\"end\":return _context6.stop();}}},_callee6,null,[[0,10]]);}));return function(_x6){return _ref6.apply(this,arguments);};}();};export var deleteCommentPost=function deleteCommentPost(postID,commentID,setModal){return/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(dispatch){var _yield$api$deleteComm,data;return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:_context7.prev=0;dispatch({type:'DELETE_COMMENT_LOADING'});_context7.next=4;return api.deleteCommentpost(postID,commentID);case 4:_yield$api$deleteComm=_context7.sent;data=_yield$api$deleteComm.data;dispatch({type:'DELETE_COMMENT',payload:{postID:postID,commentID:commentID}});console.log(data.msg);setModal(false);_context7.next=14;break;case 11:_context7.prev=11;_context7.t0=_context7[\"catch\"](0);dispatch({type:'ERRORS',payload:_context7.t0});case 14:case\"end\":return _context7.stop();}}},_callee7,null,[[0,11]]);}));return function(_x7){return _ref7.apply(this,arguments);};}();};","map":{"version":3,"sources":["C:/Users/Lim/Desktop/Clone/login-mern/client/src/redux/actions/post.js"],"names":["api","createPost","postData","setModalOpen","dispatch","type","data","payload","console","log","deletePost","id","updatePost","updateData","modalHandler","likePost","createCommentPost","commentData","updateCommentPost","deleteCommentPost","postID","commentID","setModal","deleteCommentpost","msg"],"mappings":"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","sourcesContent":["import * as api from '../../api/post';\r\n\r\n//I'll just leave these actions here since we are not using it and we are handling the api request inside the components\r\n\r\n// export const fetchPostsLimit = (history, pageNumber, setHasMore) => async (dispatch) => {\r\n//     try {\r\n//         dispatch({type: 'POSTS_LOADING'});\r\n//         const {data} = await api.fetchPostsLimit(pageNumber);\r\n//         console.log('post data: ', data);\r\n//         setHasMore(data.result.length > 0);\r\n//         dispatch({type: 'POSTS', payload: data});\r\n//     } catch (err) {\r\n//         dispatch({type:'ERRORS', payload: err});\r\n//         if(err.response?.status === 401){\r\n//             dispatch({type:'LOGOUT'});\r\n//             history.push('/login');\r\n//         }\r\n//     }\r\n// }\r\n// export const fetchUserPostsLimit = (history, id, pageNumber,setHasMore) => async (dispatch) => {\r\n\r\n//     try {\r\n//         dispatch({type:'POSTS_LOADING'});\r\n//         const {data} = await api.fetchUserPostsLimit(pageNumber, id);\r\n//         setHasMore(data.result.length > 0);\r\n//         console.log(data);\r\n//         dispatch({type: 'POSTS', payload: data});\r\n//     } catch (err) {\r\n//         dispatch({type:'ERRORS', payload: err});\r\n//         if(err.response?.status === 401){\r\n//             dispatch({type: 'LOGOUT'});\r\n//             history.push('/login');\r\n//         }\r\n//     }\r\n// }\r\n\r\nexport const createPost = ( postData, setModalOpen ) => async (dispatch) => {\r\n    try {\r\n        dispatch({type: 'NEWPOST_LOADING'});\r\n        const {data}= await api.createPost(postData);\r\n        dispatch({type:'NEW_POST',payload: data});\r\n        setModalOpen(false);\r\n        \r\n    } catch (err) {\r\n        console.log('error sa created post',err);\r\n        dispatch({type:'ERRORS', payload: err});\r\n    }\r\n}\r\n\r\nexport const deletePost = (id) => async (dispatch) => {\r\n    try{\r\n        dispatch({type: 'DELETE_LOADING'});\r\n        await api.deletePost(id);\r\n        dispatch({type:'DELETE_POST', payload: id});\r\n    }catch(err) {\r\n        console.log(err);\r\n        dispatch({type:'ERRORS', payload: err});\r\n    }\r\n}\r\n\r\nexport const updatePost = (id,updateData,modalHandler) => async (dispatch) => {\r\n    try {\r\n        dispatch({type: 'UPDATEPOST_LOADING'});\r\n        const {data} = await api.updatePost(id,updateData);\r\n        dispatch({type: 'UPDATED_POST', payload: data});\r\n        modalHandler();\r\n   \r\n    } catch (err) {\r\n        dispatch({type:'ERRORS', payload: err});\r\n    }\r\n}\r\n\r\n\r\nexport const likePost = (id) => async(dispatch) => {\r\n    try{\r\n        const {data} = await api.likePost(id);\r\n        dispatch({type: 'LIKE_POST', payload: data});\r\n    \r\n    } catch(err) {\r\n        dispatch({type: 'ERRORS', payload: err})\r\n    }\r\n}\r\n\r\n\r\n// export const fetchCommentPost = (id) => async(dispatch) => {\r\n//     try{\r\n//         dispatch({type:'COMMENT_LOADING'});\r\n//         const {data} = await api.fetchCommentPost(id);\r\n//         dispatch({type: 'COMMENT', payload: data});\r\n//     } catch(err){\r\n//         dispatch({type: 'ERRORS', payload: err});\r\n//     }\r\n// }\r\n\r\nexport const createCommentPost = (id, commentData) => async(dispatch) => {\r\n    try{\r\n        dispatch({type: 'CREATE_COMMENT_LOADING'});\r\n        const {data} = await api.createCommentPost(id,commentData);\r\n        dispatch({type:'NEW_COMMENT', payload: data});\r\n    \r\n    }catch(err){\r\n        dispatch({type: 'ERRORS', payload: err});\r\n    }\r\n}\r\n\r\nexport const updateCommentPost = (id, commentData, modalHandler) => async(dispatch) => {\r\n    try{\r\n        dispatch({type:'UPDATE_COMMENT_LOADING'});\r\n        const {data} = await api.updateCommentPost(id, commentData);\r\n        dispatch({type:'UPDATE_COMMENT', payload: data});\r\n        modalHandler();\r\n    }catch(err){\r\n        dispatch({type:'ERRORS', payload: err});\r\n    }\r\n}\r\n\r\nexport const deleteCommentPost = (postID, commentID, setModal) => async(dispatch) => {\r\n    try{\r\n        dispatch({type:'DELETE_COMMENT_LOADING'});\r\n        const {data} = await api.deleteCommentpost(postID, commentID);\r\n        dispatch({type:'DELETE_COMMENT', payload: {postID: postID, commentID: commentID}});\r\n        console.log(data.msg);\r\n        setModal(false);\r\n    }catch(err){\r\n        dispatch({type:'ERRORS', payload: err});\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}