{"ast":null,"code":"import axios from 'axios';\naxios.interceptors.request.use(req => {\n  if (localStorage.getItem('token')) {\n    req.headers.Authorization = `Bearer ${localStorage.getItem('token')}`;\n  }\n\n  return req;\n});\nexport const createPost = data => axios.post('/post/create', data);\nexport const deletePost = id => axios.delete(`/post/delete/${id}`);\nexport const updatePost = (id, updateData) => axios.patch(`/post/update/${id}`, updateData);\nexport const likePost = id => axios.patch(`/post/like/${id}`);\nexport const createCommentPost = (id, data) => axios.post(`/post/comment/${id}`, data);\nexport const updateCommentPost = (id, data) => axios.put(`/post/comment/${id}`, data);\nexport const deleteCommentpost = (postID, commentID) => axios.delete(`/post/${postID}/comment/${commentID}`); //I'll just leave these API ENDPOINTS here since we are not using it and we are handling the api request inside the components\n// export const fetchPostsLimit = (pageNumber) => axios.get(`/post/post?page=${pageNumber}`);\n// export const fetchUserPostsLimit = (pageNumber, id) => axios.get(`/post/user?user=${id}&page=${pageNumber}`)\n// export const fetchCommentPost = (id) => axios.get(`/post/comment/${id}`);","map":{"version":3,"sources":["C:/Users/Lim/Desktop/Clone/login-mern/client/src/api/post.js"],"names":["axios","interceptors","request","use","req","localStorage","getItem","headers","Authorization","createPost","data","post","deletePost","id","delete","updatePost","updateData","patch","likePost","createCommentPost","updateCommentPost","put","deleteCommentpost","postID","commentID"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEAA,KAAK,CAACC,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAAgCC,GAAD,IAAS;AACpC,MAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAH,EAAiC;AAC7BF,IAAAA,GAAG,CAACG,OAAJ,CAAYC,aAAZ,GAA6B,UAASH,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B,EAApE;AACH;;AAED,SAAOF,GAAP;AACH,CAND;AASA,OAAO,MAAMK,UAAU,GAAIC,IAAD,IAAUV,KAAK,CAACW,IAAN,CAAW,cAAX,EAA2BD,IAA3B,CAA7B;AACP,OAAO,MAAME,UAAU,GAAIC,EAAD,IAAQb,KAAK,CAACc,MAAN,CAAc,gBAAeD,EAAG,EAAhC,CAA3B;AACP,OAAO,MAAME,UAAU,GAAG,CAACF,EAAD,EAAKG,UAAL,KAAoBhB,KAAK,CAACiB,KAAN,CAAa,gBAAeJ,EAAG,EAA/B,EAAkCG,UAAlC,CAAvC;AACP,OAAO,MAAME,QAAQ,GAAIL,EAAD,IAAQb,KAAK,CAACiB,KAAN,CAAa,cAAaJ,EAAG,EAA7B,CAAzB;AACP,OAAO,MAAMM,iBAAiB,GAAG,CAACN,EAAD,EAAIH,IAAJ,KAAaV,KAAK,CAACW,IAAN,CAAY,iBAAgBE,EAAG,EAA/B,EAAkCH,IAAlC,CAAvC;AACP,OAAO,MAAMU,iBAAiB,GAAG,CAACP,EAAD,EAAKH,IAAL,KAAcV,KAAK,CAACqB,GAAN,CAAW,iBAAgBR,EAAG,EAA9B,EAAiCH,IAAjC,CAAxC;AACP,OAAO,MAAMY,iBAAiB,GAAG,CAACC,MAAD,EAASC,SAAT,KAAuBxB,KAAK,CAACc,MAAN,CAAc,SAAQS,MAAO,YAAWC,SAAU,EAAlD,CAAjD,C,CAGP;AAEA;AACA;AACA","sourcesContent":["import axios from 'axios';\r\n\r\naxios.interceptors.request.use((req) => { \r\n    if(localStorage.getItem('token')){\r\n        req.headers.Authorization = `Bearer ${localStorage.getItem('token')}`\r\n    }\r\n\r\n    return req;\r\n})\r\n\r\n\r\nexport const createPost = (data) => axios.post('/post/create', data);\r\nexport const deletePost = (id) => axios.delete(`/post/delete/${id}`);\r\nexport const updatePost = (id, updateData) => axios.patch(`/post/update/${id}`, updateData);\r\nexport const likePost = (id) => axios.patch(`/post/like/${id}`);\r\nexport const createCommentPost = (id,data) => axios.post(`/post/comment/${id}`, data);\r\nexport const updateCommentPost = (id, data) => axios.put(`/post/comment/${id}`, data);\r\nexport const deleteCommentpost = (postID, commentID) => axios.delete(`/post/${postID}/comment/${commentID}`);\r\n\r\n\r\n//I'll just leave these API ENDPOINTS here since we are not using it and we are handling the api request inside the components\r\n\r\n// export const fetchPostsLimit = (pageNumber) => axios.get(`/post/post?page=${pageNumber}`);\r\n// export const fetchUserPostsLimit = (pageNumber, id) => axios.get(`/post/user?user=${id}&page=${pageNumber}`)\r\n// export const fetchCommentPost = (id) => axios.get(`/post/comment/${id}`);"]},"metadata":{},"sourceType":"module"}