{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/Lim/Desktop/Clone/login-mern/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/Lim/Desktop/Clone/login-mern/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import*as api from'../../api/users';// const redirect = (err,history,dispatch) => {\n//     if(err.response?.status === 401){\n//         dispatch({type:'LOGOUT'});\n//         history.push('/login');\n//     }\n// }\n// export const allUser = (history) => async (dispatch) => {\n//     try{\n//         dispatch({type:'USERS_LOADING'});\n//         const {data} = await api.allUser();\n//         dispatch({type: 'USERS', payload: data});\n//     }catch(err){\n//         dispatch({type:'USERS_ERROR', payload: err});\n//         redirect(err,history,dispatch);\n//     }\n// }\n// export const getUserProfile  = (id,history) => async (dispatch) => {\n//     try {\n//         dispatch({type: 'USER_LOADING'});\n//         const {data} = await api.getUser(id);\n//         dispatch ({type: 'USER', payload: data});\n//     } catch (err) {\n//         dispatch({type: 'USERS_ERROR', payload: err});\n//         redirect(err,history,dispatch);\n//     }\n// }\n// export const searchUser = (name) => async (dispatch) => {\n//     try {\n//         dispatch({type: 'SEARCH_LOADING'});\n//         const {data} = await api.searchUser(name);\n//         dispatch({type: 'SEARCH_USER', payload: data});\n//     } catch (err) {\n//         dispatch({type: 'USERS_ERROR', payload: err});\n//     }\n// }\n//this function is for changename only\nexport var updateUserProfile=function updateUserProfile(id,updateData,setModal){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var _yield$api$updateUser,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;dispatch({type:'UPDATE_LOADING'});_context.next=4;return api.updateUserProfile(id,updateData);case 4:_yield$api$updateUser=_context.sent;data=_yield$api$updateUser.data;dispatch({type:'UPDATE_USER',payload:data});setModal(false);window.location.reload();_context.next=14;break;case 11:_context.prev=11;_context.t0=_context[\"catch\"](0);dispatch({type:'USERS_ERROR',payload:_context.t0});case 14:case\"end\":return _context.stop();}}},_callee,null,[[0,11]]);}));return function(_x){return _ref.apply(this,arguments);};}();};export var updateCoverPhoto=function updateCoverPhoto(id,updatedata,setModal){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var _yield$api$updateCove,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;dispatch({type:'UPDATE_LOADING'});_context2.next=4;return api.updateCoverPhoto(id,updatedata);case 4:_yield$api$updateCove=_context2.sent;data=_yield$api$updateCove.data;dispatch({type:'UPDATE_USER',payload:data});setModal(false);window.location.reload();_context2.next=14;break;case 11:_context2.prev=11;_context2.t0=_context2[\"catch\"](0);dispatch({type:'USERS_ERROR',payload:_context2.t0});case 14:case\"end\":return _context2.stop();}}},_callee2,null,[[0,11]]);}));return function(_x2){return _ref2.apply(this,arguments);};}();};export var updateProfilePicture=function updateProfilePicture(id,updatedata,setModal){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var _yield$api$updateProf,data,_err$response,errors;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;dispatch({type:'UPDATE_LOADING'});_context3.next=4;return api.updateProfilePicture(id,updatedata);case 4:_yield$api$updateProf=_context3.sent;data=_yield$api$updateProf.data;dispatch({type:'UPDATE_USER',payload:data});setModal(false);window.location.reload();_context3.next=15;break;case 11:_context3.prev=11;_context3.t0=_context3[\"catch\"](0);errors=(_err$response=_context3.t0.response)===null||_err$response===void 0?void 0:_err$response.data.errors;dispatch({type:'USERS_ERROR',payload:errors});case 15:case\"end\":return _context3.stop();}}},_callee3,null,[[0,11]]);}));return function(_x3){return _ref3.apply(this,arguments);};}();};export var followUser=function followUser(id){return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch){var _yield$api$followUser,data;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;dispatch({type:'USER_FOLLOWING_LOADING'});_context4.next=4;return api.followUser(id);case 4:_yield$api$followUser=_context4.sent;data=_yield$api$followUser.data;dispatch({type:'FOLLOW_USER',payload:data});_context4.next=12;break;case 9:_context4.prev=9;_context4.t0=_context4[\"catch\"](0);dispatch({type:'USERS_ERROR',payload:_context4.t0});case 12:case\"end\":return _context4.stop();}}},_callee4,null,[[0,9]]);}));return function(_x4){return _ref4.apply(this,arguments);};}();};","map":{"version":3,"sources":["C:/Users/Lim/Desktop/Clone/login-mern/client/src/redux/actions/users.js"],"names":["api","updateUserProfile","id","updateData","setModal","dispatch","type","data","payload","window","location","reload","updateCoverPhoto","updatedata","updateProfilePicture","errors","response","followUser"],"mappings":"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","sourcesContent":["import * as api from '../../api/users';\r\n\r\n// const redirect = (err,history,dispatch) => {\r\n//     if(err.response?.status === 401){\r\n//         dispatch({type:'LOGOUT'});\r\n//         history.push('/login');\r\n//     }\r\n// }\r\n\r\n// export const allUser = (history) => async (dispatch) => {\r\n//     try{\r\n//         dispatch({type:'USERS_LOADING'});\r\n//         const {data} = await api.allUser();\r\n//         dispatch({type: 'USERS', payload: data});\r\n//     }catch(err){\r\n//         dispatch({type:'USERS_ERROR', payload: err});\r\n//         redirect(err,history,dispatch);\r\n//     }\r\n// }\r\n\r\n// export const getUserProfile  = (id,history) => async (dispatch) => {\r\n//     try {\r\n//         dispatch({type: 'USER_LOADING'});\r\n//         const {data} = await api.getUser(id);\r\n//         dispatch ({type: 'USER', payload: data});\r\n//     } catch (err) {\r\n//         dispatch({type: 'USERS_ERROR', payload: err});\r\n//         redirect(err,history,dispatch);\r\n//     }\r\n// }\r\n\r\n// export const searchUser = (name) => async (dispatch) => {\r\n//     try {\r\n//         dispatch({type: 'SEARCH_LOADING'});\r\n//         const {data} = await api.searchUser(name);\r\n//         dispatch({type: 'SEARCH_USER', payload: data});\r\n//     } catch (err) {\r\n//         dispatch({type: 'USERS_ERROR', payload: err});\r\n//     }\r\n// }\r\n//this function is for changename only\r\nexport const updateUserProfile = (id, updateData, setModal) => async (dispatch) => {\r\n    try {\r\n        dispatch({type:'UPDATE_LOADING'});\r\n        const {data} = await api.updateUserProfile(id, updateData);\r\n        dispatch({type:'UPDATE_USER', payload: data});\r\n        setModal(false);\r\n        window.location.reload();\r\n    } catch (err) {\r\n        dispatch({type: 'USERS_ERROR',payload: err});\r\n    }\r\n}\r\n\r\nexport const updateCoverPhoto = (id, updatedata,setModal) => async (dispatch) => {\r\n    try {\r\n        dispatch({type:'UPDATE_LOADING'});\r\n        const {data} = await api.updateCoverPhoto(id,updatedata);\r\n        dispatch({type:'UPDATE_USER', payload: data});\r\n        setModal(false);\r\n        window.location.reload();\r\n    } catch (err) {\r\n        dispatch({type: 'USERS_ERROR',payload: err});\r\n    }\r\n}\r\n\r\nexport const updateProfilePicture = (id, updatedata,setModal) => async (dispatch) => {\r\n    try {\r\n        dispatch({type:'UPDATE_LOADING'});\r\n        const {data} = await api.updateProfilePicture(id,updatedata);\r\n        dispatch({type:'UPDATE_USER', payload: data});\r\n        setModal(false);\r\n        window.location.reload();\r\n    } catch (err) {\r\n        const errors = err.response?.data.errors;\r\n        dispatch({type: 'USERS_ERROR',payload: errors});\r\n    }\r\n}\r\n\r\nexport const followUser = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({type:'USER_FOLLOWING_LOADING'});\r\n        const {data} = await api.followUser(id);\r\n        dispatch({type: 'FOLLOW_USER', payload: data});\r\n    } catch (err) {\r\n        dispatch({type: 'USERS_ERROR',payload: err});\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}