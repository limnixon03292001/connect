{"ast":null,"code":"import axios from'axios';axios.interceptors.request.use(function(req){if(localStorage.getItem('token')){req.headers.Authorization=\"Bearer \".concat(localStorage.getItem('token'));}return req;});export var createPost=function createPost(data){return axios.post('/post/create',data);};export var deletePost=function deletePost(id){return axios.delete(\"/post/delete/\".concat(id));};export var updatePost=function updatePost(id,updateData){return axios.patch(\"/post/update/\".concat(id),updateData);};export var likePost=function likePost(id){return axios.patch(\"/post/like/\".concat(id));};export var createCommentPost=function createCommentPost(id,data){return axios.post(\"/post/comment/\".concat(id),data);};export var updateCommentPost=function updateCommentPost(id,data){return axios.patch(\"/post/comment/\".concat(id),data);};export var deleteCommentpost=function deleteCommentpost(postID,commentID){return axios.delete(\"/post/\".concat(postID,\"/comment/\").concat(commentID));};//I'll just leave these API ENDPOINTS here since we are not using it and we are handling the api request inside the components\n// export const fetchPostsLimit = (pageNumber) => axios.get(`/post/post?page=${pageNumber}`);\n// export const fetchUserPostsLimit = (pageNumber, id) => axios.get(`/post/user?user=${id}&page=${pageNumber}`)\n// export const fetchCommentPost = (id) => axios.get(`/post/comment/${id}`);","map":{"version":3,"sources":["C:/Users/Lim/Desktop/Clone/login-mern/client/src/api/post.js"],"names":["axios","interceptors","request","use","req","localStorage","getItem","headers","Authorization","createPost","data","post","deletePost","id","delete","updatePost","updateData","patch","likePost","createCommentPost","updateCommentPost","deleteCommentpost","postID","commentID"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEAA,KAAK,CAACC,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAA+B,SAACC,GAAD,CAAS,CACpC,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAH,CAAiC,CAC7BF,GAAG,CAACG,OAAJ,CAAYC,aAAZ,kBAAsCH,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAtC,EACH,CAED,MAAOF,CAAAA,GAAP,CACH,CAND,EASA,MAAO,IAAMK,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,IAAD,QAAUV,CAAAA,KAAK,CAACW,IAAN,CAAW,cAAX,CAA2BD,IAA3B,CAAV,EAAnB,CACP,MAAO,IAAME,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,EAAD,QAAQb,CAAAA,KAAK,CAACc,MAAN,wBAA6BD,EAA7B,EAAR,EAAnB,CACP,MAAO,IAAME,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACF,EAAD,CAAKG,UAAL,QAAoBhB,CAAAA,KAAK,CAACiB,KAAN,wBAA4BJ,EAA5B,EAAkCG,UAAlC,CAApB,EAAnB,CACP,MAAO,IAAME,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACL,EAAD,QAAQb,CAAAA,KAAK,CAACiB,KAAN,sBAA0BJ,EAA1B,EAAR,EAAjB,CACP,MAAO,IAAMM,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACN,EAAD,CAAIH,IAAJ,QAAaV,CAAAA,KAAK,CAACW,IAAN,yBAA4BE,EAA5B,EAAkCH,IAAlC,CAAb,EAA1B,CACP,MAAO,IAAMU,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACP,EAAD,CAAKH,IAAL,QAAcV,CAAAA,KAAK,CAACiB,KAAN,yBAA6BJ,EAA7B,EAAmCH,IAAnC,CAAd,EAA1B,CACP,MAAO,IAAMW,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,MAAD,CAASC,SAAT,QAAuBvB,CAAAA,KAAK,CAACc,MAAN,iBAAsBQ,MAAtB,qBAAwCC,SAAxC,EAAvB,EAA1B,CAGP;AAEA;AACA;AACA","sourcesContent":["import axios from 'axios';\r\n\r\naxios.interceptors.request.use((req) => { \r\n    if(localStorage.getItem('token')){\r\n        req.headers.Authorization = `Bearer ${localStorage.getItem('token')}`\r\n    }\r\n\r\n    return req;\r\n})\r\n\r\n\r\nexport const createPost = (data) => axios.post('/post/create', data);\r\nexport const deletePost = (id) => axios.delete(`/post/delete/${id}`);\r\nexport const updatePost = (id, updateData) => axios.patch(`/post/update/${id}`, updateData);\r\nexport const likePost = (id) => axios.patch(`/post/like/${id}`);\r\nexport const createCommentPost = (id,data) => axios.post(`/post/comment/${id}`, data);\r\nexport const updateCommentPost = (id, data) => axios.patch(`/post/comment/${id}`, data);\r\nexport const deleteCommentpost = (postID, commentID) => axios.delete(`/post/${postID}/comment/${commentID}`);\r\n\r\n\r\n//I'll just leave these API ENDPOINTS here since we are not using it and we are handling the api request inside the components\r\n\r\n// export const fetchPostsLimit = (pageNumber) => axios.get(`/post/post?page=${pageNumber}`);\r\n// export const fetchUserPostsLimit = (pageNumber, id) => axios.get(`/post/user?user=${id}&page=${pageNumber}`)\r\n// export const fetchCommentPost = (id) => axios.get(`/post/comment/${id}`);"]},"metadata":{},"sourceType":"module"}